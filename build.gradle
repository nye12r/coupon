plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.co.meli'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.named('bootJar') {
    launchScript()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.json:json:20220320'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'


}
jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
tasks.named('test') {
    useJUnitPlatform()
}
test {
    exclude("com/co/meli/coupon/dto/BodyCoupon.class",
            'com/co/meli/coupon/CouponApplication.class',
            "com/co/meli/coupon/dto/**",
            'com.co.meli.coupon.dto.BodyCoupon.class',
            'com.co.meli.coupon.CouponApplication.class')
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    executionData("com/co/meli/coupon/dto/BodyCoupon.class",
            'com/co/meli/coupon/CouponApplication.class',
            "com/co/meli/coupon/dto/**",
            'com.co.meli.coupon.dto.BodyCoupon.class',
            'com.co.meli.coupon.CouponApplication.class')
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/co/meli/coupon/dto/BodyCoupon.class",
                    'com/co/meli/coupon/CouponApplication.class',
                    "com/co/meli/coupon/dto/**",
                    'com.co.meli.coupon.dto.BodyCoupon.class',
                    'com.co.meli.coupon.CouponApplication.class'
            ])
        }))
    }
    reports {
        xml.required = false
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')

    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
            excludes = [
                    "com/co/meli/coupon/dto/BodyCoupon.class",
                    'com/co/meli/coupon/CouponApplication.class',
                    "com/co/meli/coupon/dto/**",
                    'com.co.meli.coupon.dto.BodyCoupon.class',
                    'com.co.meli.coupon.CouponApplication.class'
            ]
        }
    }
}